Snapshot.Tco05.add (Step 0; Original)
  (Data.Semiring.add Data.Semiring.semiringInt)
---------------
Snapshot.Tco05.add (Step 1; Final)
  Data.Semiring.intAdd

===============

Snapshot.Tco05.span (Step 0; Original)
  (\p@v0 -> \arr@v1 -> 
    letrec
      let go@v2 =
        (\i@v3 -> 
          let v@v4 =
            ((Data.Array.index arr@v1) i@v3);
          {#- Rewrite - Inline -#}
          let v5 =
            v@v4;
          {#- Rewrite - Inline -#}
          let v6 =
            (\x@v6 ->
              {#- Rewrite - Inline -#}
              let v7 =
                (p@v0 x@v6);
              {#- Rewrite - Inline -#}
              let v8 =
                (\ ->
                  (go@v2 ((Snapshot.Tco05.add i@v3) 1))
                );
              {#- Rewrite - Inline -#}
              let v9 =
                (\ ->
                  (Data.Maybe.Just i@v3)
                );
              if (== v7 true) then
                (v8)
              else
                (v9)
            );
          {#- Rewrite - Inline -#}
          let v7 =
            (\ ->
              Data.Maybe.Nothing
            );
          if (isTag Data.Maybe.Just v5) then
            {#- Rewrite - Inline -#}
            let v8 =
              (
                v5
              )#value0;
            (v6 x@v8)
          else if (isTag Data.Maybe.Nothing v5) then
            (v7)
          else
            <PatternMatchFailure>
        );
    (go@v2 0)
  )
---------------
Snapshot.Tco05.span (Step 1)
  (\p@v0 -> \arr@v1 -> 
    letrec
      let go@v2 =
        (\i@v3 -> 
          let v@v4 =
            ((Data.Array.index arr@v1) i@v3);
          if (isTag Data.Maybe.Just v@v4) then
            {#- Rewrite - Inline -#}
            let v5 =
              (
                v@v4
              )#value0;
            if (p@v0 v5) then
              (go@v2 {#- Rewrite - Inline -#}
              let v6 =
                1;
              (add i@v3 v6))
            else
              (Data.Maybe.Just.Maybe i@v3)
          else if (isTag Data.Maybe.Nothing v@v4) then
            Data.Maybe.Nothing
          else
            <PatternMatchFailure>
        );
    (go@v2 0)
  )
---------------
Snapshot.Tco05.span (Step 2; Final)
  (\p@v0 -> \arr@v1 -> 
    letrec
      let go@v2 =
        (\i@v3 -> 
          let v@v4 =
            ((Data.Array.index arr@v1) i@v3);
          if (isTag Data.Maybe.Just v@v4) then
            if (p@v0 (
                v@v4
              )#value0) then
              (go@v2 (add i@v3 1))
            else
              (Data.Maybe.Just.Maybe i@v3)
          else if (isTag Data.Maybe.Nothing v@v4) then
            Data.Maybe.Nothing
          else
            <PatternMatchFailure>
        );
    (go@v2 0)
  )