Snapshot.EffectBind07.add (Step 0; Original)
  (Data.Semiring.add Data.Semiring.semiringInt)
---------------
Snapshot.EffectBind07.add (Step 1; Final)
  Data.Semiring.intAdd

===============

Snapshot.EffectBind07.bind (Step 0; Original)
  (Control.Bind.bind Effect.bindEffect)
---------------
Snapshot.EffectBind07.bind (Step 1; Final)
  Effect.bindE

===============

Snapshot.EffectBind07.pure (Step 0; Original)
  (Control.Applicative.pure Effect.applicativeEffect)
---------------
Snapshot.EffectBind07.pure (Step 1; Final)
  Effect.pureE

===============

Snapshot.EffectBind07.sub (Step 0; Original)
  (Data.Ring.sub Data.Ring.ringInt)
---------------
Snapshot.EffectBind07.sub (Step 1; Final)
  Data.Ring.intSub

===============

Snapshot.EffectBind07.test (Step 0; Original)
  (\random@v0 -> \value@v1 -> 
    ((Snapshot.EffectBind07.bind random@v0) (\x@v2 -> 
      ((Snapshot.EffectBind07.bind [[ LetAssoc
        let c@v3 =
          (value@v1 Data.Unit.unit);
        let b@v3 =
          ((Snapshot.EffectBind07.add c@v3) c@v3);
        let a@v3 =
          ((Snapshot.EffectBind07.add b@v3) b@v3);
        ((Snapshot.EffectBind07.bind random@v0) (\x1@v4 -> 
          ((Snapshot.EffectBind07.bind random@v0) (\y@v5 -> 
            (Snapshot.EffectBind07.pure ((Snapshot.EffectBind07.add ((Snapshot.EffectBind07.add ((Snapshot.EffectBind07.add x1@v4) y@v5)) a@v3)) a@v3))
          ))
        ))
      ]]) (\n@v3 -> 
        ((Snapshot.EffectBind07.bind random@v0) (\m@v4 -> 
          (Snapshot.EffectBind07.pure ((Snapshot.EffectBind07.sub ((Snapshot.EffectBind07.add x@v2) n@v3)) m@v4))
        ))
      ))
    ))
  )
---------------
Snapshot.EffectBind07.test (Step 1)
  (\random@v0 -> \value@v1 -> 
    letEffect x@v2 =
      random@v0;
    [[ LetAssoc
      let c@v3 =
        (value@v1 <PrimUndefined>);
      let v3 =
        let b@v4 =
          (add c@v3 c@v3);
        let a@v5 =
          (add b@v4 b@v4);
        letEffect x1@v6 =
          random@v0;
        letEffect y@v7 =
          random@v0;
        [[ LetAssoc
          let v8 =
            (add x1@v6 y@v7);
          let v8 =
            {#- Rewrite - Inline -#}
            let v9 =
              (\v9 -> 
                (add v8 v9)
              );
            (v9 a@v5);
          let v8 =
            {#- Rewrite - Inline -#}
            let v9 =
              (\v9 -> 
                (add v8 v9)
              );
            (v9 a@v5);
          {#- Rewrite - Inline -#}
          let v9 =
            (effectPure v8);
          v9
        ]];
      {#- Rewrite - Inline -#}
      let v4 =
        letEffect n@v4 =
          v3;
        letEffect m@v5 =
          random@v0;
        [[ LetAssoc
          let v6 =
            (add x@v2 n@v4);
          let v6 =
            {#- Rewrite - Inline -#}
            let v7 =
              (\v7 -> 
                (subtract v6 v7)
              );
            (v7 m@v5);
          {#- Rewrite - Inline -#}
          let v7 =
            (effectPure v6);
          v7
        ]];
      v4
    ]]
  )
---------------
Snapshot.EffectBind07.test (Step 2)
  (\random@v0 -> \value@v1 -> 
    letEffect x@v2 =
      random@v0;
    let c@v3 =
      (value@v1 <PrimUndefined>);
    [[ LetAssoc
      let b@v4 =
        (add c@v3 c@v3);
      let v4 =
        let a@v5 =
          (add b@v4 b@v4);
        letEffect x1@v6 =
          random@v0;
        letEffect y@v7 =
          random@v0;
        {#- Rewrite - Inline -#}
        let v8 =
          (add x1@v6 y@v7);
        {#- Rewrite - Inline -#}
        let v9 =
          (add v8 a@v5);
        {#- Rewrite - Inline -#}
        let v10 =
          (add v9 a@v5);
        (effectPure v10);
      letEffect n@v5 =
        v4;
      letEffect m@v6 =
        random@v0;
      {#- Rewrite - Inline -#}
      let v7 =
        (add x@v2 n@v5);
      {#- Rewrite - Inline -#}
      let v8 =
        (subtract v7 m@v6);
      (effectPure v8)
    ]]
  )
---------------
Snapshot.EffectBind07.test (Step 3)
  (\random@v0 -> \value@v1 -> 
    letEffect x@v2 =
      random@v0;
    let c@v3 =
      (value@v1 <PrimUndefined>);
    let b@v4 =
      (add c@v3 c@v3);
    [[ LetAssoc
      let a@v5 =
        (add b@v4 b@v4);
      let v5 =
        letEffect x1@v6 =
          random@v0;
        letEffect y@v7 =
          random@v0;
        (effectPure (add (add (add x1@v6 y@v7) a@v5) a@v5));
      letEffect n@v6 =
        v5;
      letEffect m@v7 =
        random@v0;
      (effectPure (subtract (add x@v2 n@v6) m@v7))
    ]]
  )
---------------
Snapshot.EffectBind07.test (Step 4)
  (\random@v0 -> \value@v1 -> 
    letEffect x@v2 =
      random@v0;
    let c@v3 =
      (value@v1 <PrimUndefined>);
    let b@v4 =
      (add c@v3 c@v3);
    let a@v5 =
      (add b@v4 b@v4);
    {#- Rewrite - Inline -#}
    let v6 =
      letEffect x1@v6 =
        random@v0;
      letEffect y@v7 =
        random@v0;
      (effectPure (add (add (add x1@v6 y@v7) a@v5) a@v5));
    letEffect n@v7 =
      v6;
    letEffect m@v8 =
      random@v0;
    (effectPure (subtract (add x@v2 n@v7) m@v8))
  )
---------------
Snapshot.EffectBind07.test (Step 5)
  (\random@v0 -> \value@v1 -> 
    letEffect x@v2 =
      random@v0;
    let c@v3 =
      (value@v1 <PrimUndefined>);
    let b@v4 =
      (add c@v3 c@v3);
    let a@v5 =
      (add b@v4 b@v4);
    [[ EffectBindAssoc
      letEffect x1@v6 =
        random@v0;
      letEffect n@v6 =
        letEffect y@v7 =
          random@v0;
        (effectPure (add (add (add x1@v6 y@v7) a@v5) a@v5));
      letEffect m@v7 =
        random@v0;
      (effectPure (subtract (add x@v2 n@v6) m@v7))
    ]]
  )
---------------
Snapshot.EffectBind07.test (Step 6)
  (\random@v0 -> \value@v1 -> 
    letEffect x@v2 =
      random@v0;
    let c@v3 =
      (value@v1 <PrimUndefined>);
    let b@v4 =
      (add c@v3 c@v3);
    let a@v5 =
      (add b@v4 b@v4);
    letEffect x1@v6 =
      random@v0;
    [[ EffectBindAssoc
      letEffect y@v7 =
        random@v0;
      letEffect n@v7 =
        (effectPure (add (add (add x1@v6 y@v7) a@v5) a@v5));
      letEffect m@v8 =
        random@v0;
      (effectPure (subtract (add x@v2 n@v7) m@v8))
    ]]
  )
---------------
Snapshot.EffectBind07.test (Step 7)
  (\random@v0 -> \value@v1 -> 
    letEffect x@v2 =
      random@v0;
    let c@v3 =
      (value@v1 <PrimUndefined>);
    let b@v4 =
      (add c@v3 c@v3);
    let a@v5 =
      (add b@v4 b@v4);
    letEffect x1@v6 =
      random@v0;
    letEffect y@v7 =
      random@v0;
    {#- Rewrite - Inline -#}
    let n@v8 =
      (add (add (add x1@v6 y@v7) a@v5) a@v5);
    letEffect m@v9 =
      random@v0;
    (effectPure (subtract (add x@v2 n@v8) m@v9))
  )
---------------
Snapshot.EffectBind07.test (Step 8; Final)
  (\random@v0 -> \value@v1 -> 
    letEffect x@v2 =
      random@v0;
    let c@v3 =
      (value@v1 <PrimUndefined>);
    let b@v4 =
      (add c@v3 c@v3);
    let a@v5 =
      (add b@v4 b@v4);
    letEffect x1@v6 =
      random@v0;
    letEffect y@v7 =
      random@v0;
    letEffect m@v8 =
      random@v0;
    (effectPure (subtract (add x@v2 (add (add (add x1@v6 y@v7) a@v5) a@v5)) m@v8))
  )