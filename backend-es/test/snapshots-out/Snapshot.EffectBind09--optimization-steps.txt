Snapshot.EffectBind09.discard (Step 0; Original)
  ((Control.Bind.discard Control.Bind.discardUnit) Effect.bindEffect)
---------------
Snapshot.EffectBind09.discard (Step 1; Final)
  Effect.bindE

===============

Snapshot.EffectBind09.log (Step 0; Original)
  (Effect.Class.Console.log Effect.Class.monadEffectEffect)
---------------
Snapshot.EffectBind09.log (Step 1; Final)
  (Effect.Class.Console.log Effect.Class.monadEffectEffect)

===============

Snapshot.EffectBind09.pure (Step 0; Original)
  (Control.Applicative.pure Effect.applicativeEffect)
---------------
Snapshot.EffectBind09.pure (Step 1; Final)
  Effect.pureE

===============

Snapshot.EffectBind09.test1 (Step 0; Original)
  (\bool@v0 ->
    (Snapshot.EffectBind09.discard
      (Snapshot.EffectBind09.when'
        bool@v0
        (\v@v1 -> (Snapshot.EffectBind09.log "1"))
      )
      (\$__unused@v1 ->
        (Snapshot.EffectBind09.discard
          (Snapshot.EffectBind09.when'
            bool@v0
            (\v@v2 -> (Snapshot.EffectBind09.log "2"))
          )
          (\$__unused@v2 ->
            (Snapshot.EffectBind09.when'
              bool@v0
              (\v@v3 -> (Snapshot.EffectBind09.log "3"))
            )
          )
        )
      )
    )
  )
---------------
Snapshot.EffectBind09.test1 (Step 1)
  (\bool@v0 ->
    let v1 =
      -- Inline v1
      let v1 =
        (\v@v1 ->
          -- Inline v2
          let v2 = "1";
          -- Inline v3
          let v3 =
            -- Inline v3
            let v3 = (Effect.Console.log v2);
            v3;
          v3
        );
      if bool@v0 then (v1 <PrimUndefined>) else (# effectPure <PrimUndefined> #);
    -- Inline v2
    let v2 =
      letEffect $__unused@v2 = v1;
      let v3 =
        -- Inline v3
        let v3 =
          (\v@v3 ->
            -- Inline v4
            let v4 = "2";
            -- Inline v5
            let v5 =
              -- Inline v5
              let v5 = (Effect.Console.log v4);
              v5;
            v5
          );
        if bool@v0 then
          (v3 <PrimUndefined>)
        else
          (# effectPure <PrimUndefined> #);
      -- Inline v4
      let v4 =
        letEffect $__unused@v4 = v3;
        -- Inline v5
        let v5 =
          (\v@v5 ->
            -- Inline v6
            let v6 = "3";
            -- Inline v7
            let v7 =
              -- Inline v7
              let v7 = (Effect.Console.log v6);
              v7;
            v7
          );
        if bool@v0 then
          (v5 <PrimUndefined>)
        else
          (# effectPure <PrimUndefined> #);
      v4;
    v2
  )
---------------
Snapshot.EffectBind09.test1 (Step 2)
  (\bool@v0 ->
    let v1 =
      if bool@v0 then
        -- Inline v1
        let v1 = <PrimUndefined>;
        (Effect.Console.log "1")
      else
        (# effectPure <PrimUndefined> #);
    letEffect $__unused@v2 = v1;
    -- Inline v3
    let v3 =
      if bool@v0 then
        -- Inline v3
        let v3 = <PrimUndefined>;
        (Effect.Console.log "2")
      else
        (# effectPure <PrimUndefined> #);
    letEffect $__unused@v4 = v3;
    if bool@v0 then
      -- Inline v5
      let v5 = <PrimUndefined>;
      (Effect.Console.log "3")
    else
      (# effectPure <PrimUndefined> #)
  )
---------------
Snapshot.EffectBind09.test1 (Step 3; Final)
  (\bool@v0 ->
    let v1 =
      if bool@v0 then
        (Effect.Console.log "1")
      else
        (# effectPure <PrimUndefined> #);
    letEffect $__unused@v2 = v1;
    letEffect $__unused@v3 =
      if bool@v0 then
        (Effect.Console.log "2")
      else
        (# effectPure <PrimUndefined> #);
    if bool@v0 then
      (Effect.Console.log "3")
    else
      (# effectPure <PrimUndefined> #)
  )

===============

Snapshot.EffectBind09.when' (Step 0; Original)
  (\bool@v0 -> \k@v1 ->
    -- Inline v2
    let v2 = bool@v0;
    -- Inline v3
    let v3 = (\-> (k@v1 Data.Unit.unit));
    -- Inline v4
    let v4 = (\-> (Snapshot.EffectBind09.pure Data.Unit.unit));
    if ((eq v2) true) then (v3!) else (v4!)
  )
---------------
Snapshot.EffectBind09.when' (Step 1)
  (\bool@v0 -> \k@v1 ->
    if bool@v0 then
      (k@v1 <PrimUndefined>)
    else
      -- Inline v2
      let v2 = <PrimUndefined>;
      -- Inline v3
      let v3 = (# effectPure v2 #);
      v3
  )
---------------
Snapshot.EffectBind09.when' (Step 2; Final)
  (\bool@v0 -> \k@v1 ->
    if bool@v0 then (k@v1 <PrimUndefined>) else (# effectPure <PrimUndefined> #)
  )