Snapshot.EffectBind04.bind (Step 0; Original)
  (Control.Bind.bind Effect.bindEffect)
---------------
Snapshot.EffectBind04.bind (Step 1; Final)
  Effect.bindE

===============

Snapshot.EffectBind04.discard (Step 0; Original)
  ((Control.Bind.discard Control.Bind.discardUnit) Effect.bindEffect)
---------------
Snapshot.EffectBind04.discard (Step 1; Final)
  Effect.bindE

===============

Snapshot.EffectBind04.greaterThan (Step 0; Original)
  (Data.Ord.greaterThan Data.Ord.ordInt)
---------------
Snapshot.EffectBind04.greaterThan (Step 1; Final)
  (\a1@v0 -> \a2@v1 -> ((gt a1@v0) a2@v1))

===============

Snapshot.EffectBind04.lessThan (Step 0; Original)
  (Data.Ord.lessThan Data.Ord.ordInt)
---------------
Snapshot.EffectBind04.lessThan (Step 1; Final)
  (\a1@v0 -> \a2@v1 -> ((lt a1@v0) a2@v1))

===============

Snapshot.EffectBind04.log (Step 0; Original)
  (Effect.Class.Console.log Effect.Class.monadEffectEffect)
---------------
Snapshot.EffectBind04.log (Step 1; Final)
  (Effect.Class.Console.log Effect.Class.monadEffectEffect)

===============

Snapshot.EffectBind04.test1 (Step 0; Original)
  (\random@v0 ->
    (Snapshot.EffectBind04.bind
      random@v0
      (\n@v1 ->
        -- Inline v2
        let v2 = ((Snapshot.EffectBind04.greaterThan n@v1) 100);
        -- Inline v3
        let v3 = (\-> (Snapshot.EffectBind04.log "Too hot"));
        -- Inline v4
        let v4 =
          (\->
            -- Inline v4
            let v4 = ((Snapshot.EffectBind04.lessThan n@v1) 20);
            -- Inline v5
            let v5 = (\-> (Snapshot.EffectBind04.log "Too cold"));
            -- Inline v6
            let v6 = (\-> (Snapshot.EffectBind04.log "Just right"));
            if ((eq v4) true) then (v5!) else (v6!)
          );
        if ((eq v2) true) then (v3!) else (v4!)
      )
    )
  )
---------------
Snapshot.EffectBind04.test1 (Step 1)
  (\random@v0 ->
    letEffect n@v1 = random@v0;
    if -- Inline v2
    let v2 = 100;
    ((gt n@v1) v2) then
      -- Inline v2
      let v2 = "Too hot";
      -- Inline v3
      let v3 =
        -- Inline v3
        let v3 = (Effect.Console.log v2);
        v3;
      v3
    else if -- Inline v2
    let v2 = 20;
    ((lt n@v1) v2) then
      -- Inline v2
      let v2 = "Too cold";
      -- Inline v3
      let v3 =
        -- Inline v3
        let v3 = (Effect.Console.log v2);
        v3;
      v3
    else
      -- Inline v2
      let v2 = "Just right";
      -- Inline v3
      let v3 =
        -- Inline v3
        let v3 = (Effect.Console.log v2);
        v3;
      v3
  )
---------------
Snapshot.EffectBind04.test1 (Step 2; Final)
  (\random@v0 ->
    letEffect n@v1 = random@v0;
    if ((gt n@v1) 100) then
      (Effect.Console.log "Too hot")
    else if ((lt n@v1) 20) then
      (Effect.Console.log "Too cold")
    else
      (Effect.Console.log "Just right")
  )

===============

Snapshot.EffectBind04.test2 (Step 0; Original)
  (\random@v0 ->
    (Snapshot.EffectBind04.bind
      random@v0
      (\n@v1 ->
        (Snapshot.EffectBind04.discard
          -- Inline v2
          let v2 = ((Snapshot.EffectBind04.greaterThan n@v1) 100);
          -- Inline v3
          let v3 = (\-> (Snapshot.EffectBind04.log "Too hot"));
          -- Inline v4
          let v4 =
            (\->
              -- Inline v4
              let v4 = ((Snapshot.EffectBind04.lessThan n@v1) 20);
              -- Inline v5
              let v5 = (\-> (Snapshot.EffectBind04.log "Too cold"));
              -- Inline v6
              let v6 = (\-> (Snapshot.EffectBind04.log "Just right"));
              if ((eq v4) true) then (v5!) else (v6!)
            );
          if ((eq v2) true) then (v3!) else (v4!)
          (\$__unused@v2 -> (Snapshot.EffectBind04.log "Done"))
        )
      )
    )
  )
---------------
Snapshot.EffectBind04.test2 (Step 1)
  (\random@v0 ->
    letEffect n@v1 = random@v0;
    let v2 =
      if -- Inline v2
      let v2 = 100;
      ((gt n@v1) v2) then
        -- Inline v2
        let v2 = "Too hot";
        -- Inline v3
        let v3 =
          -- Inline v3
          let v3 = (Effect.Console.log v2);
          v3;
        v3
      else if -- Inline v2
      let v2 = 20;
      ((lt n@v1) v2) then
        -- Inline v2
        let v2 = "Too cold";
        -- Inline v3
        let v3 =
          -- Inline v3
          let v3 = (Effect.Console.log v2);
          v3;
        v3
      else
        -- Inline v2
        let v2 = "Just right";
        -- Inline v3
        let v3 =
          -- Inline v3
          let v3 = (Effect.Console.log v2);
          v3;
        v3;
    -- Inline v3
    let v3 =
      letEffect $__unused@v3 = v2;
      -- Inline v4
      let v4 = "Done";
      -- Inline v5
      let v5 =
        -- Inline v5
        let v5 = (Effect.Console.log v4);
        v5;
      v5;
    v3
  )
---------------
Snapshot.EffectBind04.test2 (Step 2)
  (\random@v0 ->
    letEffect n@v1 = random@v0;
    -- Inline v2
    let v2 =
      if ((gt n@v1) 100) then
        (Effect.Console.log "Too hot")
      else if ((lt n@v1) 20) then
        (Effect.Console.log "Too cold")
      else
        (Effect.Console.log "Just right");
    letEffect $__unused@v3 = v2;
    (Effect.Console.log "Done")
  )
---------------
Snapshot.EffectBind04.test2 (Step 3; Final)
  (\random@v0 ->
    letEffect n@v1 = random@v0;
    letEffect $__unused@v2 =
      if ((gt n@v1) 100) then
        (Effect.Console.log "Too hot")
      else if ((lt n@v1) 20) then
        (Effect.Console.log "Too cold")
      else
        (Effect.Console.log "Just right");
    (Effect.Console.log "Done")
  )