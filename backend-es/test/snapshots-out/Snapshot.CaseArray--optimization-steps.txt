Snapshot.CaseArray.test1 (Step 0; Original)
  (\v@v0 ->
    -- Inline v1
    let v1 = v@v0;
    -- Inline v2
    let v2 = (\-> "0");
    -- Inline v3
    let v3 = (\-> "1");
    -- Inline v4
    let v4 = (\-> "1");
    -- Inline v5
    let v5 = (\-> "2");
    -- Inline v6
    let v6 = (\-> "3");
    -- Inline v7
    let v7 = (\-> "catch");
    if ((eq (arrayLength v1)) 0) then
      (v2!)
    else if ((eq (arrayLength v1)) 1) then
      -- Inline v8
      let v8 = v1[0];
      if ((eq v8) 1) then (v3!) else (v4!)
    else if ((eq (arrayLength v1)) 2) then
      -- Inline v8
      let v8 = v1[0];
      -- Inline v9
      let v9 = v1[1];
      if ((eq v9) 2) then (v5!) else (v7!)
    else if ((eq (arrayLength v1)) 3) then
      -- Inline v8
      let v8 = v1[0];
      -- Inline v9
      let v9 = v1[1];
      -- Inline v10
      let v10 = v1[2];
      (v6!)
    else
      (v7!)
  )
---------------
Snapshot.CaseArray.test1 (Step 1; Final)
  (\v@v0 ->
    if ((eq (arrayLength v@v0)) 0) then
      "0"
    else if ((eq (arrayLength v@v0)) 1) then
      if ((eq v@v0[0]) 1) then "1" else "1"
    else if ((eq (arrayLength v@v0)) 2) then
      if ((eq v@v0[1]) 2) then "2" else "catch"
    else if ((eq (arrayLength v@v0)) 3) then
      "3"
    else
      "catch"
  )