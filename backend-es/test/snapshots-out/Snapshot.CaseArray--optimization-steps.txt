Snapshot.CaseArray.test1 (Step 0; Original)
  (\v@v0 -> 
    {#- Rewrite - Inline -#}
    let v1 =
      v@v0;
    {#- Rewrite - Inline -#}
    let v2 =
      (\ ->
        "0"
      );
    {#- Rewrite - Inline -#}
    let v3 =
      (\ ->
        "1"
      );
    {#- Rewrite - Inline -#}
    let v4 =
      (\ ->
        "1"
      );
    {#- Rewrite - Inline -#}
    let v5 =
      (\ ->
        "2"
      );
    {#- Rewrite - Inline -#}
    let v6 =
      (\ ->
        "3"
      );
    {#- Rewrite - Inline -#}
    let v7 =
      (\ ->
        "catch"
      );
    if (== (arrayLength v1) 0) then
      (v2)
    else if (== (arrayLength v1) 1) then
      {#- Rewrite - Inline -#}
      let v8 =
        (
          v1
        )[0];
      if (== v8 1) then
        (v3)
      else
        (v4)
    else if (== (arrayLength v1) 2) then
      {#- Rewrite - Inline -#}
      let v8 =
        (
          v1
        )[0];
      {#- Rewrite - Inline -#}
      let v9 =
        (
          v1
        )[1];
      if (== v9 2) then
        (v5)
      else
        (v7)
    else if (== (arrayLength v1) 3) then
      {#- Rewrite - Inline -#}
      let v8 =
        (
          v1
        )[0];
      {#- Rewrite - Inline -#}
      let v9 =
        (
          v1
        )[1];
      {#- Rewrite - Inline -#}
      let v10 =
        (
          v1
        )[2];
      (v6)
    else
      (v7)
  )
---------------
Snapshot.CaseArray.test1 (Step 1; Final)
  (\v@v0 -> 
    if (== (arrayLength v@v0) 0) then
      "0"
    else if (== (arrayLength v@v0) 1) then
      if (== (
          v@v0
        )[0] 1) then
        "1"
      else
        "1"
    else if (== (arrayLength v@v0) 2) then
      if (== (
          v@v0
        )[1] 2) then
        "2"
      else
        "catch"
    else if (== (arrayLength v@v0) 3) then
      "3"
    else
      "catch"
  )