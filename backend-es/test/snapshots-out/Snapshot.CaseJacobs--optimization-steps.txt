Snapshot.CaseJacobs.Add (Step 0; Original)
  letCtor Add =
    (\value0 value1 -> { tag: "Add", value0: value0, value1: value1 });
---------------
Snapshot.CaseJacobs.Add (Step 1; Final)
  letCtor Add =
    (\value0 value1 -> { tag: "Add", value0: value0, value1: value1 });

===============

Snapshot.CaseJacobs.Mul (Step 0; Original)
  letCtor Mul =
    (\value0 value1 -> { tag: "Mul", value0: value0, value1: value1 });
---------------
Snapshot.CaseJacobs.Mul (Step 1; Final)
  letCtor Mul =
    (\value0 value1 -> { tag: "Mul", value0: value0, value1: value1 });

===============

Snapshot.CaseJacobs.Succ (Step 0; Original)
  letCtor Succ = (\value0 -> { tag: "Succ", value0: value0 });
---------------
Snapshot.CaseJacobs.Succ (Step 1; Final)
  letCtor Succ = (\value0 -> { tag: "Succ", value0: value0 });

===============

Snapshot.CaseJacobs.Zero (Step 0; Original)
  letCtor Zero = { tag: "Zero" };
---------------
Snapshot.CaseJacobs.Zero (Step 1; Final)
  letCtor Zero = { tag: "Zero" };

===============

Snapshot.CaseJacobs.append (Step 0; Original)
  (Data.Semigroup.append Data.Semigroup.semigroupString)
---------------
Snapshot.CaseJacobs.append (Step 1; Final)
  Data.Semigroup.concatString

===============

Snapshot.CaseJacobs.show (Step 0; Original)
  (Data.Show.show Snapshot.CaseJacobs.showExpr)
---------------
Snapshot.CaseJacobs.show (Step 1; Final)
  Snapshot.CaseJacobs.showExpr.show

===============

Snapshot.CaseJacobs.showExpr (Step 0; Original)
  { show:
      (\v@v0 ->
        -- Inline v1
        let v1 = v@v0;
        -- Inline v2
        let v2 =
          (\a@v2 b@v3 ->
            (Snapshot.CaseJacobs.append
              "Add("
              (Snapshot.CaseJacobs.append
                ((Data.Show.show Snapshot.CaseJacobs.showExpr) a@v2)
                (Snapshot.CaseJacobs.append
                  " "
                  (Snapshot.CaseJacobs.append
                    ((Data.Show.show Snapshot.CaseJacobs.showExpr) b@v3)
                    ")"
                  )
                )
              )
            )
          );
        -- Inline v3
        let v3 =
          (\a@v3 b@v4 ->
            (Snapshot.CaseJacobs.append
              "Mul("
              (Snapshot.CaseJacobs.append
                ((Data.Show.show Snapshot.CaseJacobs.showExpr) a@v3)
                (Snapshot.CaseJacobs.append
                  " "
                  (Snapshot.CaseJacobs.append
                    ((Data.Show.show Snapshot.CaseJacobs.showExpr) b@v4)
                    ")"
                  )
                )
              )
            )
          );
        -- Inline v4
        let v4 =
          (\a@v4 ->
            (Snapshot.CaseJacobs.append
              "Succ("
              (Snapshot.CaseJacobs.append
                ((Data.Show.show Snapshot.CaseJacobs.showExpr) a@v4)
                ")"
              )
            )
          );
        -- Inline v5
        let v5 = (\-> "Zero");
        if (isTag Snapshot.CaseJacobs.Add v1) then
          -- Inline v6
          let v6 = v1#value0;
          -- Inline v7
          let v7 = v1#value1;
          (v2 a@v6 b@v7)
        else if (isTag Snapshot.CaseJacobs.Mul v1) then
          -- Inline v6
          let v6 = v1#value0;
          -- Inline v7
          let v7 = v1#value1;
          (v3 a@v6 b@v7)
        else if (isTag Snapshot.CaseJacobs.Succ v1) then
          -- Inline v6
          let v6 = v1#value0;
          (v4 a@v6)
        else if (isTag Snapshot.CaseJacobs.Zero v1) then
          (v5!)
        else
          <PatternMatchFailure>
      )
  }
---------------
Snapshot.CaseJacobs.showExpr (Step 1)
  { show:
      (\v@v0 ->
        if (isTag Snapshot.CaseJacobs.Add v@v0) then
          -- Inline v1
          let v1 = v@v0#value0;
          -- Inline v2
          let v2 = v@v0#value1;
          -- Inline v3
          let v3 = "Add(";
          -- Inline v4
          let v4 = (\v4 -> ((stringAppend v3) v4));
          (v4
            let v5 = (Snapshot.CaseJacobs.showExpr.show v1);
            -- Inline v6
            let v6 = (\v6 -> ((stringAppend v5) v6));
            (v6
              -- Inline v7
              let v7 = " ";
              -- Inline v8
              let v8 = (\v8 -> ((stringAppend v7) v8));
              (v8
                let v9 = (Snapshot.CaseJacobs.showExpr.show v2);
                -- Inline v10
                let v10 = (\v10 -> ((stringAppend v9) v10));
                (v10 ")")
              )
            )
          )
        else if (isTag Snapshot.CaseJacobs.Mul v@v0) then
          -- Inline v1
          let v1 = v@v0#value0;
          -- Inline v2
          let v2 = v@v0#value1;
          -- Inline v3
          let v3 = "Mul(";
          -- Inline v4
          let v4 = (\v4 -> ((stringAppend v3) v4));
          (v4
            let v5 = (Snapshot.CaseJacobs.showExpr.show v1);
            -- Inline v6
            let v6 = (\v6 -> ((stringAppend v5) v6));
            (v6
              -- Inline v7
              let v7 = " ";
              -- Inline v8
              let v8 = (\v8 -> ((stringAppend v7) v8));
              (v8
                let v9 = (Snapshot.CaseJacobs.showExpr.show v2);
                -- Inline v10
                let v10 = (\v10 -> ((stringAppend v9) v10));
                (v10 ")")
              )
            )
          )
        else if (isTag Snapshot.CaseJacobs.Succ v@v0) then
          -- Inline v1
          let v1 = v@v0#value0;
          -- Inline v2
          let v2 = "Succ(";
          -- Inline v3
          let v3 = (\v3 -> ((stringAppend v2) v3));
          (v3
            let v4 = (Snapshot.CaseJacobs.showExpr.show v1);
            -- Inline v5
            let v5 = (\v5 -> ((stringAppend v4) v5));
            (v5 ")")
          )
        else if (isTag Snapshot.CaseJacobs.Zero v@v0) then
          "Zero"
        else
          <PatternMatchFailure>
      )
  }
---------------
Snapshot.CaseJacobs.showExpr (Step 2)
  { show:
      (\v@v0 ->
        if (isTag Snapshot.CaseJacobs.Add v@v0) then
          -- Inline v1
          let v1 =
            -- Inline v1
            let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0#value0);
            -- Inline v2
            let v2 =
              -- Inline v2
              let v2 =
                -- Inline v2
                let v2 = (Snapshot.CaseJacobs.showExpr.show v@v0#value1);
                -- Inline v3
                let v3 = ")";
                ((stringAppend v2) v3);
              ((stringAppend " ") v2);
            ((stringAppend v1) v2);
          ((stringAppend "Add(") v1)
        else if (isTag Snapshot.CaseJacobs.Mul v@v0) then
          -- Inline v1
          let v1 =
            -- Inline v1
            let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0#value0);
            -- Inline v2
            let v2 =
              -- Inline v2
              let v2 =
                -- Inline v2
                let v2 = (Snapshot.CaseJacobs.showExpr.show v@v0#value1);
                -- Inline v3
                let v3 = ")";
                ((stringAppend v2) v3);
              ((stringAppend " ") v2);
            ((stringAppend v1) v2);
          ((stringAppend "Mul(") v1)
        else if (isTag Snapshot.CaseJacobs.Succ v@v0) then
          -- Inline v1
          let v1 =
            -- Inline v1
            let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0#value0);
            -- Inline v2
            let v2 = ")";
            ((stringAppend v1) v2);
          ((stringAppend "Succ(") v1)
        else if (isTag Snapshot.CaseJacobs.Zero v@v0) then
          "Zero"
        else
          <PatternMatchFailure>
      )
  }
---------------
Snapshot.CaseJacobs.showExpr (Step 3; Final)
  { show:
      (\v@v0 ->
        if (isTag Snapshot.CaseJacobs.Add v@v0) then
          (stringAppend
            "Add("
            (stringAppend
              (Snapshot.CaseJacobs.showExpr.show v@v0#value0)
              (stringAppend
                " "
                (stringAppend
                  (Snapshot.CaseJacobs.showExpr.show v@v0#value1)
                  ")"
                )
              )
            )
          )
        else if (isTag Snapshot.CaseJacobs.Mul v@v0) then
          (stringAppend
            "Mul("
            (stringAppend
              (Snapshot.CaseJacobs.showExpr.show v@v0#value0)
              (stringAppend
                " "
                (stringAppend
                  (Snapshot.CaseJacobs.showExpr.show v@v0#value1)
                  ")"
                )
              )
            )
          )
        else if (isTag Snapshot.CaseJacobs.Succ v@v0) then
          (stringAppend
            "Succ("
            ((stringAppend (Snapshot.CaseJacobs.showExpr.show v@v0#value0)) ")")
          )
        else if (isTag Snapshot.CaseJacobs.Zero v@v0) then
          "Zero"
        else
          <PatternMatchFailure>
      )
  }

===============

Snapshot.CaseJacobs.test1 (Step 0; Original)
  (\v@v0 ->
    -- Inline v1
    let v1 = v@v0;
    -- Inline v2
    let v2 = (\-> "e1");
    -- Inline v3
    let v3 =
      (\x@v3 ->
        ((Snapshot.CaseJacobs.append "e2: ") (Snapshot.CaseJacobs.show x@v3))
      );
    -- Inline v4
    let v4 =
      (\x@v4 y@v5 ->
        (Snapshot.CaseJacobs.append
          "e3: "
          (Snapshot.CaseJacobs.append
            (Snapshot.CaseJacobs.show x@v4)
            ((Snapshot.CaseJacobs.append " ") (Snapshot.CaseJacobs.show y@v5))
          )
        )
      );
    -- Inline v5
    let v5 =
      (\x@v5 ->
        ((Snapshot.CaseJacobs.append "e4: ") (Snapshot.CaseJacobs.show x@v5))
      );
    -- Inline v6
    let v6 =
      (\x@v6 y@v7 z@v8 ->
        (Snapshot.CaseJacobs.append
          "e5: "
          (Snapshot.CaseJacobs.append
            (Snapshot.CaseJacobs.show x@v6)
            (Snapshot.CaseJacobs.append
              " "
              (Snapshot.CaseJacobs.append
                (Snapshot.CaseJacobs.show y@v7)
                (Snapshot.CaseJacobs.append
                  " "
                  (Snapshot.CaseJacobs.show z@v8)
                )
              )
            )
          )
        )
      );
    -- Inline v7
    let v7 =
      (\x@v7 ->
        ((Snapshot.CaseJacobs.append "e6: ") (Snapshot.CaseJacobs.show x@v7))
      );
    -- Inline v8
    let v8 =
      (\x@v8 ->
        ((Snapshot.CaseJacobs.append "e7: ") (Snapshot.CaseJacobs.show x@v8))
      );
    if (isTag Snapshot.CaseJacobs.Add v1) then
      -- Inline v9
      let v9 = v1#value0;
      -- Inline v10
      let v10 = v1#value1;
      if (isTag Snapshot.CaseJacobs.Zero v10) then
        if (isTag Snapshot.CaseJacobs.Zero v9) then
          (v2!)
        else if (isTag Snapshot.CaseJacobs.Succ v9) then
          -- Inline v11
          let v11 = v9#value0;
          (v4 x@v11 y@v10)
        else
          (v7 x@v9)
      else if (isTag Snapshot.CaseJacobs.Succ v9) then
        -- Inline v11
        let v11 = v9#value0;
        (v4 x@v11 y@v10)
      else
        (v8 x@v1)
    else if (isTag Snapshot.CaseJacobs.Mul v1) then
      -- Inline v9
      let v9 = v1#value0;
      -- Inline v10
      let v10 = v1#value1;
      if (isTag Snapshot.CaseJacobs.Zero v9) then
        (v3 x@v10)
      else if (isTag Snapshot.CaseJacobs.Zero v10) then
        (v5 x@v9)
      else if (isTag Snapshot.CaseJacobs.Add v9) then
        -- Inline v11
        let v11 = v9#value0;
        -- Inline v12
        let v12 = v9#value1;
        (v6 x@v11 y@v12 z@v10)
      else
        (v8 x@v1)
    else
      (v8 x@v1)
  )
---------------
Snapshot.CaseJacobs.test1 (Step 1)
  (\v@v0 ->
    if (isTag Snapshot.CaseJacobs.Add v@v0) then
      if (isTag Snapshot.CaseJacobs.Zero v@v0#value1) then
        if (isTag Snapshot.CaseJacobs.Zero v@v0#value0) then
          "e1"
        else if (isTag Snapshot.CaseJacobs.Succ v@v0#value0) then
          -- Inline v1
          let v1 = v@v0#value0#value0;
          -- Inline v2
          let v2 = v@v0#value1;
          -- Inline v3
          let v3 = "e3: ";
          -- Inline v4
          let v4 = (\v4 -> ((stringAppend v3) v4));
          (v4
            let v5 = (Snapshot.CaseJacobs.showExpr.show v1);
            -- Inline v6
            let v6 = (\v6 -> ((stringAppend v5) v6));
            (v6
              -- Inline v7
              let v7 = " ";
              -- Inline v8
              let v8 = (\v8 -> ((stringAppend v7) v8));
              (v8 (Snapshot.CaseJacobs.showExpr.show v2))
            )
          )
        else
          -- Inline v1
          let v1 = v@v0#value0;
          -- Inline v2
          let v2 = "e6: ";
          -- Inline v3
          let v3 = (\v3 -> ((stringAppend v2) v3));
          (v3 (Snapshot.CaseJacobs.showExpr.show v1))
      else if (isTag Snapshot.CaseJacobs.Succ v@v0#value0) then
        -- Inline v1
        let v1 = v@v0#value0#value0;
        -- Inline v2
        let v2 = v@v0#value1;
        -- Inline v3
        let v3 = "e3: ";
        -- Inline v4
        let v4 = (\v4 -> ((stringAppend v3) v4));
        (v4
          let v5 = (Snapshot.CaseJacobs.showExpr.show v1);
          -- Inline v6
          let v6 = (\v6 -> ((stringAppend v5) v6));
          (v6
            -- Inline v7
            let v7 = " ";
            -- Inline v8
            let v8 = (\v8 -> ((stringAppend v7) v8));
            (v8 (Snapshot.CaseJacobs.showExpr.show v2))
          )
        )
      else
        -- Inline v1
        let v1 = "e7: ";
        -- Inline v2
        let v2 = (\v2 -> ((stringAppend v1) v2));
        (v2 (Snapshot.CaseJacobs.showExpr.show v@v0))
    else if (isTag Snapshot.CaseJacobs.Mul v@v0) then
      if (isTag Snapshot.CaseJacobs.Zero v@v0#value0) then
        -- Inline v1
        let v1 = v@v0#value1;
        -- Inline v2
        let v2 = "e2: ";
        -- Inline v3
        let v3 = (\v3 -> ((stringAppend v2) v3));
        (v3 (Snapshot.CaseJacobs.showExpr.show v1))
      else if (isTag Snapshot.CaseJacobs.Zero v@v0#value1) then
        -- Inline v1
        let v1 = v@v0#value0;
        -- Inline v2
        let v2 = "e4: ";
        -- Inline v3
        let v3 = (\v3 -> ((stringAppend v2) v3));
        (v3 (Snapshot.CaseJacobs.showExpr.show v1))
      else if (isTag Snapshot.CaseJacobs.Add v@v0#value0) then
        -- Inline v1
        let v1 = v@v0#value0#value0;
        -- Inline v2
        let v2 = v@v0#value0#value1;
        -- Inline v3
        let v3 = v@v0#value1;
        -- Inline v4
        let v4 = "e5: ";
        -- Inline v5
        let v5 = (\v5 -> ((stringAppend v4) v5));
        (v5
          let v6 = (Snapshot.CaseJacobs.showExpr.show v1);
          -- Inline v7
          let v7 = (\v7 -> ((stringAppend v6) v7));
          (v7
            -- Inline v8
            let v8 = " ";
            -- Inline v9
            let v9 = (\v9 -> ((stringAppend v8) v9));
            (v9
              let v10 = (Snapshot.CaseJacobs.showExpr.show v2);
              -- Inline v11
              let v11 = (\v11 -> ((stringAppend v10) v11));
              (v11
                -- Inline v12
                let v12 = " ";
                -- Inline v13
                let v13 = (\v13 -> ((stringAppend v12) v13));
                (v13 (Snapshot.CaseJacobs.showExpr.show v3))
              )
            )
          )
        )
      else
        -- Inline v1
        let v1 = "e7: ";
        -- Inline v2
        let v2 = (\v2 -> ((stringAppend v1) v2));
        (v2 (Snapshot.CaseJacobs.showExpr.show v@v0))
    else
      -- Inline v1
      let v1 = "e7: ";
      -- Inline v2
      let v2 = (\v2 -> ((stringAppend v1) v2));
      (v2 (Snapshot.CaseJacobs.showExpr.show v@v0))
  )
---------------
Snapshot.CaseJacobs.test1 (Step 2)
  (\v@v0 ->
    if (isTag Snapshot.CaseJacobs.Add v@v0) then
      if (isTag Snapshot.CaseJacobs.Zero v@v0#value1) then
        if (isTag Snapshot.CaseJacobs.Zero v@v0#value0) then
          "e1"
        else if (isTag Snapshot.CaseJacobs.Succ v@v0#value0) then
          -- Inline v1
          let v1 =
            -- Inline v1
            let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0#value0#value0);
            -- Inline v2
            let v2 =
              -- Inline v2
              let v2 = (Snapshot.CaseJacobs.showExpr.show v@v0#value1);
              ((stringAppend " ") v2);
            ((stringAppend v1) v2);
          ((stringAppend "e3: ") v1)
        else
          -- Inline v1
          let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0#value0);
          ((stringAppend "e6: ") v1)
      else if (isTag Snapshot.CaseJacobs.Succ v@v0#value0) then
        -- Inline v1
        let v1 =
          -- Inline v1
          let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0#value0#value0);
          -- Inline v2
          let v2 =
            -- Inline v2
            let v2 = (Snapshot.CaseJacobs.showExpr.show v@v0#value1);
            ((stringAppend " ") v2);
          ((stringAppend v1) v2);
        ((stringAppend "e3: ") v1)
      else
        -- Inline v1
        let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0);
        ((stringAppend "e7: ") v1)
    else if (isTag Snapshot.CaseJacobs.Mul v@v0) then
      if (isTag Snapshot.CaseJacobs.Zero v@v0#value0) then
        -- Inline v1
        let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0#value1);
        ((stringAppend "e2: ") v1)
      else if (isTag Snapshot.CaseJacobs.Zero v@v0#value1) then
        -- Inline v1
        let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0#value0);
        ((stringAppend "e4: ") v1)
      else if (isTag Snapshot.CaseJacobs.Add v@v0#value0) then
        -- Inline v1
        let v1 =
          -- Inline v1
          let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0#value0#value0);
          -- Inline v2
          let v2 =
            -- Inline v2
            let v2 =
              -- Inline v2
              let v2 = (Snapshot.CaseJacobs.showExpr.show v@v0#value0#value1);
              -- Inline v3
              let v3 =
                -- Inline v3
                let v3 = (Snapshot.CaseJacobs.showExpr.show v@v0#value1);
                ((stringAppend " ") v3);
              ((stringAppend v2) v3);
            ((stringAppend " ") v2);
          ((stringAppend v1) v2);
        ((stringAppend "e5: ") v1)
      else
        -- Inline v1
        let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0);
        ((stringAppend "e7: ") v1)
    else
      -- Inline v1
      let v1 = (Snapshot.CaseJacobs.showExpr.show v@v0);
      ((stringAppend "e7: ") v1)
  )
---------------
Snapshot.CaseJacobs.test1 (Step 3; Final)
  (\v@v0 ->
    if (isTag Snapshot.CaseJacobs.Add v@v0) then
      if (isTag Snapshot.CaseJacobs.Zero v@v0#value1) then
        if (isTag Snapshot.CaseJacobs.Zero v@v0#value0) then
          "e1"
        else if (isTag Snapshot.CaseJacobs.Succ v@v0#value0) then
          (stringAppend
            "e3: "
            (stringAppend
              (Snapshot.CaseJacobs.showExpr.show v@v0#value0#value0)
              (stringAppend
                " "
                (Snapshot.CaseJacobs.showExpr.show v@v0#value1)
              )
            )
          )
        else
          (stringAppend
            "e6: "
            (Snapshot.CaseJacobs.showExpr.show v@v0#value0)
          )
      else if (isTag Snapshot.CaseJacobs.Succ v@v0#value0) then
        (stringAppend
          "e3: "
          (stringAppend
            (Snapshot.CaseJacobs.showExpr.show v@v0#value0#value0)
            ((stringAppend " ") (Snapshot.CaseJacobs.showExpr.show v@v0#value1))
          )
        )
      else
        ((stringAppend "e7: ") (Snapshot.CaseJacobs.showExpr.show v@v0))
    else if (isTag Snapshot.CaseJacobs.Mul v@v0) then
      if (isTag Snapshot.CaseJacobs.Zero v@v0#value0) then
        ((stringAppend "e2: ") (Snapshot.CaseJacobs.showExpr.show v@v0#value1))
      else if (isTag Snapshot.CaseJacobs.Zero v@v0#value1) then
        ((stringAppend "e4: ") (Snapshot.CaseJacobs.showExpr.show v@v0#value0))
      else if (isTag Snapshot.CaseJacobs.Add v@v0#value0) then
        (stringAppend
          "e5: "
          (stringAppend
            (Snapshot.CaseJacobs.showExpr.show v@v0#value0#value0)
            (stringAppend
              " "
              (stringAppend
                (Snapshot.CaseJacobs.showExpr.show v@v0#value0#value1)
                (stringAppend
                  " "
                  (Snapshot.CaseJacobs.showExpr.show v@v0#value1)
                )
              )
            )
          )
        )
      else
        ((stringAppend "e7: ") (Snapshot.CaseJacobs.showExpr.show v@v0))
    else
      ((stringAppend "e7: ") (Snapshot.CaseJacobs.showExpr.show v@v0))
  )