Snapshot.KnownConstructors02.test (Step 0; Original)
  (\a@v0 -> 
    let v@v1 =
      (Data.Maybe.Just a@v0);
    {#- Rewrite - Inline -#}
    let v2 =
      v@v1;
    {#- Rewrite - Inline -#}
    let v3 =
      (\b@v3 ->
        b@v3
      );
    {#- Rewrite - Inline -#}
    let v4 =
      (\c@v4 ->
        c@v4
      );
    {#- Rewrite - Inline -#}
    let v5 =
      (\ ->
        42
      );
    if (isTag Data.Maybe.Just v2) then
      {#- Rewrite - Inline -#}
      let v6 =
        (
          v2
        )#value0;
      if (isTag Data.Either.Left v6) then
        {#- Rewrite - Inline -#}
        let v7 =
          (
            v6
          )#value0;
        (v3 b@v7)
      else if (isTag Data.Either.Right v6) then
        {#- Rewrite - Inline -#}
        let v7 =
          (
            v6
          )#value0;
        (v4 c@v7)
      else
        <PatternMatchFailure>
    else if (isTag Data.Maybe.Nothing v2) then
      (v5)
    else
      <PatternMatchFailure>
  )
---------------
Snapshot.KnownConstructors02.test (Step 1)
  (\a@v0 -> 
    {#- Rewrite - Inline -#}
    let v@v1 =
      (Data.Maybe.Just.Maybe a@v0);
    if (isTag Data.Maybe.Just v@v1) then
      if (isTag Data.Either.Left (
          v@v1
        )#value0) then
        {#- Rewrite - Inline -#}
        let v2 =
          (
            (
              v@v1
            )#value0
          )#value0;
        v2
      else if (isTag Data.Either.Right (
          v@v1
        )#value0) then
        {#- Rewrite - Inline -#}
        let v2 =
          (
            (
              v@v1
            )#value0
          )#value0;
        v2
      else
        <PatternMatchFailure>
    else if (isTag Data.Maybe.Nothing v@v1) then
      42
    else
      <PatternMatchFailure>
  )
---------------
Snapshot.KnownConstructors02.test (Step 2; Final)
  (\a@v0 -> 
    if (isTag Data.Either.Left a@v0) then
      (
        a@v0
      )#value0
    else if (isTag Data.Either.Right a@v0) then
      (
        a@v0
      )#value0
    else
      <PatternMatchFailure>
  )