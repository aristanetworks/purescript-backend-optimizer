Snapshot.KnownConstructors02.test (Step 0; Original)
  (\a@v0 ->
    let v@v1 = (Data.Maybe.Just a@v0);
    -- Inline v2
    let v2 = v@v1;
    -- Inline v3
    let v3 = (\b@v3 -> b@v3);
    -- Inline v4
    let v4 = (\c@v4 -> c@v4);
    -- Inline v5
    let v5 = (\-> 42);
    if (isTag Data.Maybe.Just v2) then
      -- Inline v6
      let v6 = v2#value0;
      if (isTag Data.Either.Left v6) then
        -- Inline v7
        let v7 = v6#value0;
        (v3 b@v7)
      else if (isTag Data.Either.Right v6) then
        -- Inline v7
        let v7 = v6#value0;
        (v4 c@v7)
      else
        <PatternMatchFailure>
    else if (isTag Data.Maybe.Nothing v2) then
      (v5!)
    else
      <PatternMatchFailure>
  )
---------------
Snapshot.KnownConstructors02.test (Step 1)
  (\a@v0 ->
    -- Inline v@v1
    let v@v1 = (Data.Maybe.Just.Maybe a@v0);
    if (isTag Data.Maybe.Just v@v1) then
      if (isTag Data.Either.Left v@v1#value0) then
        -- Inline v2
        let v2 = v@v1#value0#value0;
        v2
      else if (isTag Data.Either.Right v@v1#value0) then
        -- Inline v2
        let v2 = v@v1#value0#value0;
        v2
      else
        <PatternMatchFailure>
    else if (isTag Data.Maybe.Nothing v@v1) then
      42
    else
      <PatternMatchFailure>
  )
---------------
Snapshot.KnownConstructors02.test (Step 2; Final)
  (\a@v0 ->
    if (isTag Data.Either.Left a@v0) then
      a@v0#value0
    else if (isTag Data.Either.Right a@v0) then
      a@v0#value0
    else
      <PatternMatchFailure>
  )