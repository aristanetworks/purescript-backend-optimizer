== Snapshot.Tco03 ==============================================================
================================================================================

++ Snapshot.Tco03.test Step 1 (Original) +++++++++++++++++++++++++++++++++++++++
  letrec
    go@0 =
      \n@1 ->
        letrec
          k@2 =
            \m@3 ->
              {- Inline -}
              let @4 = Snapshot.Tco03.eq m@3 100 in
              {- Inline -}
              let @5 = \() -> go@0 (Snapshot.Tco03.sub m@3 1) in
              {- Inline -}
              let
                @6 =
                  \() ->
                    {- Inline -}
                    let @6 = Snapshot.Tco03.eq m@3 900 in
                    {- Inline -}
                    let @7 = \() -> 42 in
                    {- Inline -}
                    let @8 = \() -> k@2 (Snapshot.Tco03.sub m@3 1) in
                    if #[prim.boolean.eq](@6, true) then@7()
                    else 
                      @8() in
              if #[prim.boolean.eq](@4, true) then@5()
              else 
                @6() in
        {- Inline -}
        let @3 = Snapshot.Tco03.eq n@1 0 in
        {- Inline -}
        let @4 = \() -> n@1 in
        {- Inline -}
        let
          @5 =
            \() ->
              {- Inline -}
              let @5 = Snapshot.Tco03.lessThanOrEq n@1 100 in
              {- Inline -}
              let @6 = \() -> go@0 (Snapshot.Tco03.sub n@1 1) in
              {- Inline -}
              let @7 = \() -> k@2 (Snapshot.Tco03.sub n@1 1) in
              if #[prim.boolean.eq](@5, true) then@6()
              else 
                @7() in
        if #[prim.boolean.eq](@3, true) then@4()
        else 
          @5() in
  go@0

-- Snapshot.Tco03.test Step 2 --------------------------------------------------
  letrec
    go@0 =
      \n@1 ->
        letrec
          k@2 =
            \m@3 ->
              if
                {- Inline -}
                let @4 = 100 in
                #[prim.int.eq](m@3, @4) then{- Inline -}
                let @4 = 1 in
                go@0 (#[prim.int.sub](m@3, @4))
              else if
                {- Inline -}
                let @4 = 900 in
                #[prim.int.eq](m@3, @4) then42
              else 
                {- Inline -}
                let @4 = 1 in
                k@2 (#[prim.int.sub](m@3, @4)) in
        if
          {- Inline -}
          let @3 = 0 in
          #[prim.int.eq](n@1, @3) thenn@1
        else if
          {- Inline -}
          let @3 = 100 in
          #[prim.int.lte](n@1, @3) then{- Inline -}
          let @3 = 1 in
          go@0 (#[prim.int.sub](n@1, @3))
        else 
          {- Inline -}
          let @3 = 1 in
          k@2 (#[prim.int.sub](n@1, @3)) in
  go@0

-- Snapshot.Tco03.test Step 3 (Final) ------------------------------------------
  letrec
    go@0 =
      \n@1 ->
        letrec
          k@2 =
            \m@3 ->
              if #[prim.int.eq](m@3, 100) thengo@0 (#[prim.int.sub](m@3, 1))
              else if #[prim.int.eq](m@3, 900) then42
              else 
                k@2 (#[prim.int.sub](m@3, 1)) in
        if #[prim.int.eq](n@1, 0) thenn@1
        else if #[prim.int.lte](n@1, 100) thengo@0 (#[prim.int.sub](n@1, 1))
        else 
          k@2 (#[prim.int.sub](n@1, 1)) in
  go@0